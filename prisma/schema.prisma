// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

model User {
  id       String @id @default(cuid())
  email    String @unique
  name     String
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orders Order[]
}

model Product {
  id          String   @id @default(cuid())
  name        String   @unique
  price       Float
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  order_product order_product[]
  cart_product  cart_product[]
}

model Order {
  id     String      @id @default(cuid())
  status OrderStatus

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId        String
  user          User            @relation(fields: [userId], references: [id])
  order_product order_product[]
}

model Cart {
  id     String @id @default(cuid())
  userId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cart_product cart_product[]
}

model order_product {
  quantity       Int
  priceAtTheTime Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  orderId   String
  productId String
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  @@id([orderId, productId])
}

model cart_product {
  quantity       Int
  priceAtTheTime Float

  cartId    String
  productId String
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@id([cartId, productId])
}
